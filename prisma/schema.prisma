datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String    @unique
    password      String
    emailVerified String?
    image         String?
    type          UserType  @default(USER)
    sessions      Session[]
    createdAt     String
    updatedAt     String?
    garages       Garage[]
    Car           Car[]
}

model Session {
    id           String  @id @default(cuid())
    sessionToken String  @unique @map("session_token")
    userId       String  @map("user_id")
    expires      String
    user         User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    createdAt    String
    updatedAt    String?
}

model Garage {
    id        String  @id @default(cuid())
    name      String  @unique
    address   Address @relation(fields: [addressId], references: [id], onDelete: Cascade)
    addressId String
    createdAt String
    updatedAt String?
    User      User?   @relation(fields: [userId], references: [id])
    userId    String?
    Car       Car[]
}

model Address {
    id        String   @id @default(cuid())
    street    String
    city      String
    county    String
    postCode  String
    country   String
    createdAt String
    updatedAt String?
    Garage    Garage[]
}

model Car {
    id           String  @id @default(cuid())
    registration String? @unique
    make         String?
    model        String?
    year         Int?
    vin          String? @unique
    createdAt    String
    updatedAt    String?
    Garage       Garage  @relation(fields: [garageId], references: [id], onDelete: Cascade)
    garageId     String
    createdBy    User    @relation(fields: [createdById], references: [id], onDelete: Cascade)
    createdById  String
}

enum UserType {
    ADMIN
    USER
}
